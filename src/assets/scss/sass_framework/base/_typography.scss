@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Heebo:wght@100;200;300;400;500;600;700;800;900&display=swap');

:root {
  // Create responsive text vars
  @include make-responsive-var(--text-xs-size, $font-xs-sizes);
  @include make-responsive-var(--text-sm-size, $font-sm-sizes);
  @include make-responsive-var(--base-font-size, $font-base-sizes);
  @include make-responsive-var(--text-lg-size, $font-lg-sizes);

  // Set Responsive header values
  @include make-responsive-var(
    --header-font-modifier,
    $header-font-modifiers,
    0.5
  );

  --line-height-ratio: #{$line-height-ratio};
  --line-height-ratio-headers: #{$line-height-ratio-headers};
  --text-color: #{$text-main};
  --base-font-weight: 400;
  --base-header-font-weight: 600;
  --base-line-height: calc(var(--base-font-size) * var(--line-height-ratio));
  --base-text-margin-bottom: #{$space-md};

  --primary-font: #{$primary-font};
  --secondary-font: #{$secondary-font};
  --font-family: var(--primary-font);
}

* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html {
  font-size: 62.5%; // Set 1rem to 10px
}

body {
  font-family: var(--font-family);
  font-size: var(--base-font-size);
  font-style: normal;
  font-weight: var(--base-font-weight);
  letter-spacing: 0.085rem;
  line-height: var(--base-line-height);
}

// /**************************************************/
// /* Establish base text sizes and line heights */
// /**************************************************/
.text-lg {
  --base-font-size: var(--text-lg-size);
  --base-line-height: calc(var(--base-font-size) * var(--line-height-ratio));
  line-height: var(--base-line-height);
  font-size: var(--base-font-size);
  font-weight: var(--base-font-weight);

  &:not(:last-child) {
    margin-bottom: var(--base-text-margin-bottom);
  }
}

p,
blockquote,
.text,
.text-md {
  line-height: var(--base-line-height);
  font-size: var(--base-font-size);
  font-weight: var(--base-font-weight);
  color: var(--text-color);

  &:not(:last-child) {
    margin-bottom: var(--base-text-margin-bottom);
  }
}

.text-sm {
  --base-font-size: var(--text-sm-size);
  --base-line-height: calc(
    var(--base-font-size) * var(--line-height-ratio) * 1.075
  );
  line-height: var(--base-line-height);
  font-size: var(--base-font-size);

  &:not(:last-child) {
    margin-bottom: var(--base-text-margin-bottom);
  }
}

small,
.text-xs {
  --base-font-size: var(--text-xs-size);
  --base-line-height: calc(
    var(--text-xs-size) * var(--line-height-ratio) * 1.15
  );
  line-height: var(--base-line-height);
  font-size: var(--base-font-size);

  &:not(:last-child) {
    margin-bottom: var(--base-text-margin-bottom);
  }
}

// /**************************************************/
// /* Generate Header fonts and line heights */
// /**************************************************/
@for $i from 1 through 7 {
  h#{$i},
  .h#{$i} {
    $font-modifier: calc((7 - $i) * var(--header-font-modifier));
    $header-font-size: calc(
      $font-size-standard * var(--line-height-ratio-headers) * $font-modifier
    );
    // Ensure that no header goes below $font-size-standard (16px)
    $font-size: max(#{$header-font-size}, #{$font-size-standard});
    $line-height: calc($font-size * var(--line-height-ratio-headers));

    font-family: var(--secondary-font);
    font-size: $font-size;
    line-height: $line-height;
    font-weight: var(--base-header-font-weight);
    color: var(--text-color);
    margin-bottom: var(--base-text-margin-bottom);
  }
}

// /**************************************************/
// /* Generate Font Weight Classes */
// /**************************************************/
@include class-with-responsive-val-only(
  $font-weights,
  font-weight,
  font-weight
);

// /**************************************************/
// /* Utility Tags */
// /**************************************************/
blockquote {
  padding: 0px $space-md;

  @include md-size() {
    padding: 0px $space-xl;
  }
}

ul {
  li {
    > :not(a):not(ul) {
      position: relative;

      &:before {
        content: $list-item-icon;
        padding-right: $space-sm;
      }
    }

    & > ul {
      padding-left: $space-md;
    }
  }
}

ol {
  list-style: decimal;
  margin-left: $space-md;

  li {
    & > ol {
      margin-left: $space-md;
    }
  }
}

u {
  text-decoration: none;
  position: relative;

  &:before {
    content: '';
    position: absolute;
    bottom: $underline-bottom;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: var(--text-color);
  }
}

i {
  font-style: italic;
}

.secondary-font {
  --font-family: var(--secondary-font);
  font-family: var(--font-family);
}

.indent {
  text-indent: $space-xl;
}
