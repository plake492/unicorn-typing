/*****************************************************/
/* Flex Position Classes */
/*****************************************************/
@each $flex-prop-target, $values1 in $flex {
  @each $flex-titles, $values2 in $values1 {
    @each $flex-spec, $flex-val in $values2 {
      .#{$flex-titles}-#{$flex-spec} {
        @if ($flex-titles == 'flex-gap') {
          --flex-gap-offset: #{calc($flex-val / 2)};
        }
        #{$flex-prop-target}: $flex-val;
      }
    }
  }
}

@for $i from 1 to 11 {
  .flex-#{$i} {
    flex-grow: $i;
  }
}

/*****************************************************/
/* Responsive Classes */
/*****************************************************/
@each $bp, $px in $breakpoints {
  @include respond-to(#{$px}) {
    @each $flex-prop-target, $values1 in $flex {
      @each $flex-titles, $values2 in $values1 {
        @each $flex-spec, $flex-val in $values2 {
          .#{$flex-titles}-#{$bp}-#{$flex-spec} {
            @if ($flex-titles == 'flex-gap') {
              --flex-gap-offset: #{calc($flex-val / 2)};
            }
            #{$flex-prop-target}: $flex-val;
          }
        }
      }
    }

    @for $i from 1 to 11 {
      .flex-#{$bp}-#{$i} {
        flex: $i !important;
      }
    }
  }
}
